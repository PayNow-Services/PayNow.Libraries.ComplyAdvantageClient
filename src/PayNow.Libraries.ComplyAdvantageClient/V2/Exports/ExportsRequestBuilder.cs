// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportTypes;
using PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Exports
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\exports
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ExportsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The exportTypes property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportTypes.ExportTypesRequestBuilder ExportTypes
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportTypes.ExportTypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.exports.item collection</summary>
        /// <param name="position">The `uuid` of the `Export`.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("export_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.exports.item collection</summary>
        /// <param name="position">The `uuid` of the `Export`.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("export_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.Item.WithExport_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ExportsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/exports{?page_number*,page_size*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ExportsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/exports{?page_number*,page_size*}", rawUrl)
        {
        }
        /// <summary>
        /// Calling this endpoint will return a list of all the exports that the requesting user attempted to create. It will return exports that are pending, successful and failed.You need the &quot;View and download insights&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_PaginatedResponseExportItem"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_PaginatedResponseExportItem?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder.ExportsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_PaginatedResponseExportItem> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder.ExportsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_PaginatedResponseExportItem>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_PaginatedResponseExportItem.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Create a new export by selecting an export type and a start and end date. The available export names are CUSTOMER_SCREENING, CUSTOMER, SCREENING_AND_MONITORING_CASES, PROFILES, PAYMENT_SCREENING_CASES, TRANSACTION_MONITORING_CASES_AND_ALERTS, TRANSACTIONS.You need the &quot;View and download insights&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ExportItem"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ExportItem?> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_CreateExportPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ExportItem> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_CreateExportPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ExportItem>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_ExportItem.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Calling this endpoint will return a list of all the exports that the requesting user attempted to create. It will return exports that are pending, successful and failed.You need the &quot;View and download insights&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder.ExportsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder.ExportsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Create a new export by selecting an export type and a start and end date. The available export names are CUSTOMER_SCREENING, CUSTOMER, SCREENING_AND_MONITORING_CASES, PROFILES, PAYMENT_SCREENING_CASES, TRANSACTION_MONITORING_CASES_AND_ALERTS, TRANSACTIONS.You need the &quot;View and download insights&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_CreateExportPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Exports_CreateExportPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Calling this endpoint will return a list of all the exports that the requesting user attempted to create. It will return exports that are pending, successful and failed.You need the &quot;View and download insights&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ExportsRequestBuilderGetQueryParameters 
        {
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ExportsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Exports.ExportsRequestBuilder.ExportsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ExportsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
