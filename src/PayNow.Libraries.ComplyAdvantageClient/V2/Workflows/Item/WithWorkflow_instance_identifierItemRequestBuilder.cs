// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\workflows\{workflow_instance_identifier}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithWorkflow_instance_identifierItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item.WithWorkflow_instance_identifierItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithWorkflow_instance_identifierItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/workflows/{workflow_instance_identifier}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item.WithWorkflow_instance_identifierItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithWorkflow_instance_identifierItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/workflows/{workflow_instance_identifier}", rawUrl)
        {
        }
        /// <summary>
        /// ## Overall workflow statusThis endpoint will return the status and eventual end result of the specified workflow.  Once a workflow has been initiated, it can be periodically polled to receive the status using the workflow-instance-identifier provided in the response of the POST `v2/workflows/create-and-screen`  The response comprises the status of the overall workflow.  One of- `NOT-STARTED` - The workflow is queued but has not yet begun- `IN-PROGRESS` - The workflow is executing but not yet completed.  The step details should be checked to ascertain progress- `COMPLETED` - The workflow has completed execution without errors.  The step details should be checked to ascertain the end results- `ERRORED` - The workflow has completed with errors.In addition to the status, the workflow endpoint returns:- `steps` - an array of the step keys within the workflow- `step_details` - an object containing the status and return values for each of steps within the workflow (see following section)## Workflow stepsThe workflow response contains a `step_details` object, which contains the status and returned values from each step in the workflow. Each step object within the step_details contains a status field that can be one of the following values:- `NOT-STARTED` - The step has not yet been executed- `IN-PROGRESS` - The step is executing- `COMPLETED` - The step has completed and the step_output object can be checked for output- `SKIPPED` - The step has been skipped because it did not meet the criteria for execution.  In the case of the “create and screen&quot; workflow, this applies to the screening step when the customer risk is prohibited- `ERRORED` - The step has completed but returned errorsIn addition to the status, the step detail contains:- `identifier` - a unique identifier for the step- `step_output` - an object containing the return values for the step
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_WorkflowState"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProblemDetailErrorResponse">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_WorkflowState?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_WorkflowState> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_WorkflowState>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_WorkflowState.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// ## Overall workflow statusThis endpoint will return the status and eventual end result of the specified workflow.  Once a workflow has been initiated, it can be periodically polled to receive the status using the workflow-instance-identifier provided in the response of the POST `v2/workflows/create-and-screen`  The response comprises the status of the overall workflow.  One of- `NOT-STARTED` - The workflow is queued but has not yet begun- `IN-PROGRESS` - The workflow is executing but not yet completed.  The step details should be checked to ascertain progress- `COMPLETED` - The workflow has completed execution without errors.  The step details should be checked to ascertain the end results- `ERRORED` - The workflow has completed with errors.In addition to the status, the workflow endpoint returns:- `steps` - an array of the step keys within the workflow- `step_details` - an object containing the status and return values for each of steps within the workflow (see following section)## Workflow stepsThe workflow response contains a `step_details` object, which contains the status and returned values from each step in the workflow. Each step object within the step_details contains a status field that can be one of the following values:- `NOT-STARTED` - The step has not yet been executed- `IN-PROGRESS` - The step is executing- `COMPLETED` - The step has completed and the step_output object can be checked for output- `SKIPPED` - The step has been skipped because it did not meet the criteria for execution.  In the case of the “create and screen&quot; workflow, this applies to the screening step when the customer risk is prohibited- `ERRORED` - The step has completed but returned errorsIn addition to the status, the step detail contains:- `identifier` - a unique identifier for the step- `step_output` - an object containing the return values for the step
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item.WithWorkflow_instance_identifierItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item.WithWorkflow_instance_identifierItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Workflows.Item.WithWorkflow_instance_identifierItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithWorkflow_instance_identifierItemRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
