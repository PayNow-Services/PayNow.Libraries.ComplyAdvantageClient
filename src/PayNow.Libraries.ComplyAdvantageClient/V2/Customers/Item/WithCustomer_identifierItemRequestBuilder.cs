// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Cases;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Labels;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Monitor;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Products;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Reports;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Scores;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Workflows;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\customers\{customer_identifier}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithCustomer_identifierItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The cases property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Cases.CasesRequestBuilder Cases
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Cases.CasesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The labels property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Labels.LabelsRequestBuilder Labels
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Labels.LabelsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The monitor property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Monitor.MonitorRequestBuilder Monitor
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Monitor.MonitorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Products.ProductsRequestBuilder Products
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reports property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Reports.ReportsRequestBuilder Reports
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Reports.ReportsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scores property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Scores.ScoresRequestBuilder Scores
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Scores.ScoresRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The workflows property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Workflows.WorkflowsRequestBuilder Workflows
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.Workflows.WorkflowsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCustomer_identifierItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/customers/{customer_identifier}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCustomer_identifierItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/customers/{customer_identifier}", rawUrl)
        {
        }
        /// <summary>
        /// Once the workflow status returns as COMPLETED it is possible to collect the latest customer record, including the risk score.The response contains all the information submitted during the POST `/v2/customer` request as well as the customer risk score which is appended as an object to the response.This endpoint can also be used to get the latest risk score that is calculated once the screening results have been resolved through the Mesh application.The customer-identifier can be found within the GET `/v2/workflows/` response from within the `step_output` within the `customer-creation` step.There a number of customer statuses that can be returned from this endpoint:| Status name | Description || ------ | ------ ||Processing| The customer has been created successfully but there are parts of the create-and-screen workflow that are still in progress||Active|The customer is active - the initial risk level is not prohibited and there are no initial screening results, or screening results were returned and the case status is accepted||Closed|The customer is closed - the initial risk level is prohibited, or there are screening results and the case status is rejected|
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomerV2"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 403 status code</exception>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomerV2?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomerV2> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
                { "403", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
                { "404", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomerV2>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomerV2.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Once the workflow status returns as COMPLETED it is possible to collect the latest customer record, including the risk score.The response contains all the information submitted during the POST `/v2/customer` request as well as the customer risk score which is appended as an object to the response.This endpoint can also be used to get the latest risk score that is calculated once the screening results have been resolved through the Mesh application.The customer-identifier can be found within the GET `/v2/workflows/` response from within the `step_output` within the `customer-creation` step.There a number of customer statuses that can be returned from this endpoint:| Status name | Description || ------ | ------ ||Processing| The customer has been created successfully but there are parts of the create-and-screen workflow that are still in progress||Active|The customer is active - the initial risk level is not prohibited and there are no initial screening results, or screening results were returned and the case status is accepted||Closed|The customer is closed - the initial risk level is prohibited, or there are screening results and the case status is rejected|
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithCustomer_identifierItemRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
