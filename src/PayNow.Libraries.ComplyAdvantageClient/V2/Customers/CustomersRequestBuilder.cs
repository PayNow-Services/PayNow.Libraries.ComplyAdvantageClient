// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.AcquisitionSources;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.External;
using PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Customers
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\customers
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CustomersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The acquisitionSources property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.AcquisitionSources.AcquisitionSourcesRequestBuilder AcquisitionSources
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.AcquisitionSources.AcquisitionSourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The external property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.External.ExternalRequestBuilder External
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.External.ExternalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.customers.item collection</summary>
        /// <param name="position">The unique identifier we provided when you created the customer.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("customer_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.customers.item collection</summary>
        /// <param name="position">The unique identifier we provided when you created the customer.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("customer_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.Item.WithCustomer_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CustomersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/customers{?acquisitionSource*,createdAtFrom*,createdAtTo*,monitoringEnabled*,page_number*,page_size*,riskLevel*,search*,segments*,sort*,status*,type*,updatedAtFrom*,updatedAtTo*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CustomersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/customers{?acquisitionSource*,createdAtFrom*,createdAtTo*,monitoringEnabled*,page_number*,page_size*,riskLevel*,search*,segments*,sort*,status*,type*,updatedAtFrom*,updatedAtTo*}", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint returns a list of customers that match the specified search criteria.The response includes partial information for each customer, including essential fields from the customer profile, risk level, and status objects.Complete details for each customer can be retrieved by calling the relevant endpoint with a specific customer identifier.This endpoint can return up to 10,000 customers. For larger datasets, use the &apos;exports&apos; endpoint, which is designed for exporting large volumes of data.You need the &quot;View customers&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomersList"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 403 status code</exception>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomersList?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder.CustomersRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomersList> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder.CustomersRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
                { "403", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
                { "404", global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomersList>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.CustomerManager_CustomersList.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint returns a list of customers that match the specified search criteria.The response includes partial information for each customer, including essential fields from the customer profile, risk level, and status objects.Complete details for each customer can be retrieved by calling the relevant endpoint with a specific customer identifier.This endpoint can return up to 10,000 customers. For larger datasets, use the &apos;exports&apos; endpoint, which is designed for exporting large volumes of data.You need the &quot;View customers&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder.CustomersRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder.CustomersRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// This endpoint returns a list of customers that match the specified search criteria.The response includes partial information for each customer, including essential fields from the customer profile, risk level, and status objects.Complete details for each customer can be retrieved by calling the relevant endpoint with a specific customer identifier.This endpoint can return up to 10,000 customers. For larger datasets, use the &apos;exports&apos; endpoint, which is designed for exporting large volumes of data.You need the &quot;View customers&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomersRequestBuilderGetQueryParameters 
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("acquisitionSource")]
            public string[]? AcquisitionSource { get; set; }
#nullable restore
#else
            [QueryParameter("acquisitionSource")]
            public string[] AcquisitionSource { get; set; }
#endif
            [QueryParameter("createdAtFrom")]
            public DateTimeOffset? CreatedAtFrom { get; set; }
            [QueryParameter("createdAtTo")]
            public DateTimeOffset? CreatedAtTo { get; set; }
            [QueryParameter("monitoringEnabled")]
            public bool? MonitoringEnabled { get; set; }
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("riskLevel")]
            public string? RiskLevel { get; set; }
#nullable restore
#else
            [QueryParameter("riskLevel")]
            public string RiskLevel { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("search")]
            public string? Search { get; set; }
#nullable restore
#else
            [QueryParameter("search")]
            public string Search { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("segments")]
            public string[]? Segments { get; set; }
#nullable restore
#else
            [QueryParameter("segments")]
            public string[] Segments { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string Sort { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("status")]
            public string? Status { get; set; }
#nullable restore
#else
            [QueryParameter("status")]
            public string Status { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("type")]
            public string? Type { get; set; }
#nullable restore
#else
            [QueryParameter("type")]
            public string Type { get; set; }
#endif
            [QueryParameter("updatedAtFrom")]
            public DateTimeOffset? UpdatedAtFrom { get; set; }
            [QueryParameter("updatedAtTo")]
            public DateTimeOffset? UpdatedAtTo { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomersRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Customers.CustomersRequestBuilder.CustomersRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
