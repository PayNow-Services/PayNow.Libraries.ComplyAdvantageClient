// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\alerts\{alert_identifier}\risks
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RisksRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.alerts.item.risks.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("risk_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.alerts.item.risks.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("risk_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.Item.WithRisk_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RisksRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/alerts/{alert_identifier}/risks{?page_number*,page_size*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RisksRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/alerts/{alert_identifier}/risks{?page_number*,page_size*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint will list all risks for a given alert.You need the &quot;View alerts&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_ProblemDetailErrorResponse">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse?> GetAsRisksGetResponseAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse> GetAsRisksGetResponseAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint will list all risks for a given alert.You need the &quot;View alerts&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_ProblemDetailErrorResponse">When receiving a 404 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsRisksGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint will list all risks for a given alert.You need the &quot;View alerts&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse"/>, <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RisksGetResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse? AmTransactionMonitoringRisksResponse { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse AmTransactionMonitoringRisksResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse? SraListRisksResponse { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse SraListRisksResponse { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksGetResponse();
                if("am_TransactionMonitoringRisksResponse".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AmTransactionMonitoringRisksResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse();
                }
                else if("sra_ListRisksResponse".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SraListRisksResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AmTransactionMonitoringRisksResponse != null)
                {
                    return AmTransactionMonitoringRisksResponse.GetFieldDeserializers();
                }
                else if(SraListRisksResponse != null)
                {
                    return SraListRisksResponse.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(AmTransactionMonitoringRisksResponse != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse>(null, AmTransactionMonitoringRisksResponse);
                }
                else if(SraListRisksResponse != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse>(null, SraListRisksResponse);
                }
            }
        }
        /// <summary>
        /// This endpoint will list all risks for a given alert.You need the &quot;View alerts&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RisksRequestBuilderGetQueryParameters 
        {
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>Sorting criteria in the format of: `[-]property` (`-` descending modifier).* Default sort order is ascending (without `-`).* Multiple sort criteria are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RisksRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse"/>, <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RisksResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse? AmTransactionMonitoringRisksResponse { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse AmTransactionMonitoringRisksResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse? SraListRisksResponse { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse SraListRisksResponse { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::PayNow.Libraries.ComplyAdvantageClient.V2.Alerts.Item.Risks.RisksRequestBuilder.RisksResponse();
                if("am_TransactionMonitoringRisksResponse".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AmTransactionMonitoringRisksResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse();
                }
                else if("sra_ListRisksResponse".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SraListRisksResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AmTransactionMonitoringRisksResponse != null)
                {
                    return AmTransactionMonitoringRisksResponse.GetFieldDeserializers();
                }
                else if(SraListRisksResponse != null)
                {
                    return SraListRisksResponse.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(AmTransactionMonitoringRisksResponse != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Am_TransactionMonitoringRisksResponse>(null, AmTransactionMonitoringRisksResponse);
                }
                else if(SraListRisksResponse != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_ListRisksResponse>(null, SraListRisksResponse);
                }
            }
        }
    }
}
#pragma warning restore CS0618
