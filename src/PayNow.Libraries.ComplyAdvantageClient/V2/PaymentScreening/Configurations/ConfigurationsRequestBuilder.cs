// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\payment-screening\configurations
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ConfigurationsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.paymentScreening.configurations.item collection</summary>
        /// <param name="position">configuration ID</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("configuration_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.paymentScreening.configurations.item collection</summary>
        /// <param name="position">configuration ID</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("configuration_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.Item.WithConfiguration_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.ConfigurationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ConfigurationsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/payment-screening/configurations", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.ConfigurationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ConfigurationsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/payment-screening/configurations", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint returns a list of all payment screening configurations with their metadataPayment screening configurations define which lists a transaction will be screened against and the fuzziness that should be applied to the search. You can create multiple configurations in your account. Each payment screening configuration can have multiple versions.        You need &quot;Access to base payment screening functionality&quot; enabled to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_ConfigurationSummariesResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_ConfigurationSummariesResponse?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_ConfigurationSummariesResponse> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_ConfigurationSummariesResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_ConfigurationSummariesResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint allows you to create a new payment screening configuration.Payment screening configurations define which lists a transaction will be screened against and the settings to apply to the search. You can create multiple configurations in your account and each configuration can have multiple versions.Within the configuration are one or more source collections. A source collection contains:* The sanctions lists you wish to screen against * A global fuzziness score (a spectrum with 0 as exact search, 100 as very broad search) * Name search options:    * Name fuzziness score that, if present, overrides the global fuzziness    * Search options* Reference text search options:    * Reference text fuzziness score that, if present, overrides the global fuzziness    * Search options* BIC search strictness        In addition, you can choose to omit your customer from the screening.        You need &quot;Access to base payment screening functionality&quot; enabled to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationResponse?> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationResponse> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint returns a list of all payment screening configurations with their metadataPayment screening configurations define which lists a transaction will be screened against and the fuzziness that should be applied to the search. You can create multiple configurations in your account. Each payment screening configuration can have multiple versions.        You need &quot;Access to base payment screening functionality&quot; enabled to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// This endpoint allows you to create a new payment screening configuration.Payment screening configurations define which lists a transaction will be screened against and the settings to apply to the search. You can create multiple configurations in your account and each configuration can have multiple versions.Within the configuration are one or more source collections. A source collection contains:* The sanctions lists you wish to screen against * A global fuzziness score (a spectrum with 0 as exact search, 100 as very broad search) * Name search options:    * Name fuzziness score that, if present, overrides the global fuzziness    * Search options* Reference text search options:    * Reference text fuzziness score that, if present, overrides the global fuzziness    * Search options* BIC search strictness        In addition, you can choose to omit your customer from the screening.        You need &quot;Access to base payment screening functionality&quot; enabled to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ps_CreateConfigurationRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.ConfigurationsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.ConfigurationsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.PaymentScreening.Configurations.ConfigurationsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConfigurationsRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConfigurationsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
