// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Item;
using PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Test;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\notifications\configurations\email
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EmailRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The test property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Test.TestRequestBuilder Test
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Test.TestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.notifications.configurations.email.item collection</summary>
        /// <param name="position">The identifier of the email configuration</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Item.WithIdentifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Item.WithIdentifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.Item.WithIdentifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmailRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/notifications/configurations/email{?page_number*,page_size*,sort*,type*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmailRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/notifications/configurations/email{?page_number*,page_size*,sort*,type*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns all the email notification configurations created for this account. Allows to filter by email notification type.You need the &quot;View email notification configurations&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseEmailConfigurationLog"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseEmailConfigurationLog?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder.EmailRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseEmailConfigurationLog> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder.EmailRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseEmailConfigurationLog>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseEmailConfigurationLog.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint enables you to create an email notification, by selecting a type of notification that should trigger the sending of this email and specify who the email should be sent to, when the conditions are met.At least one recipient should be specified.There is one event type which can trigger an email to be sent:### CASE_ASSIGNEDSends an email to the assignee, whenever a new case is assigned to that user.If that user is configured in the list of recipients and the person assigning the email is not the same user (so only sending an email notification when someone else assigns a case to this user).Example:```Hi Sophie,A case has been assigned to you by JulianType: Customer OnboardingCreated at: February 10, 2025 at 10:00amStage: In ReviewAssignee: SophieNote: Assigned to you because you are specialized on these scenariosClick here to view this casePlease contact support@complyadvantage.com if you have any questions.```You need the &quot;Create and update email notification configurations&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationLog"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationLog?> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationLog> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationLog>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationLog.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns all the email notification configurations created for this account. Allows to filter by email notification type.You need the &quot;View email notification configurations&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder.EmailRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder.EmailRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// This endpoint enables you to create an email notification, by selecting a type of notification that should trigger the sending of this email and specify who the email should be sent to, when the conditions are met.At least one recipient should be specified.There is one event type which can trigger an email to be sent:### CASE_ASSIGNEDSends an email to the assignee, whenever a new case is assigned to that user.If that user is configured in the list of recipients and the person assigning the email is not the same user (so only sending an email notification when someone else assigns a case to this user).Example:```Hi Sophie,A case has been assigned to you by JulianType: Customer OnboardingCreated at: February 10, 2025 at 10:00amStage: In ReviewAssignee: SophieNote: Assigned to you because you are specialized on these scenariosClick here to view this casePlease contact support@complyadvantage.com if you have any questions.```You need the &quot;Create and update email notification configurations&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_EmailConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns all the email notification configurations created for this account. Allows to filter by email notification type.You need the &quot;View email notification configurations&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmailRequestBuilderGetQueryParameters 
        {
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>Sorting criteria in the format of: `[-]property` (`-` descending modifier).* Default sort order is ascending (without `-`).* Multiple sort criteria are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
            [Obsolete("This property is deprecated, use TypeAsGetTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("type")]
            public string? Type { get; set; }
#nullable restore
#else
            [QueryParameter("type")]
            public string Type { get; set; }
#endif
            [QueryParameter("type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.GetTypeQueryParameterType? TypeAsGetTypeQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmailRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Email.EmailRequestBuilder.EmailRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmailRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
