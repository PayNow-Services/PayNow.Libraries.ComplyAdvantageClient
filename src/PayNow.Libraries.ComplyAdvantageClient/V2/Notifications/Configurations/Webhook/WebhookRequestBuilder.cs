// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Item;
using PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Test;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\notifications\configurations\webhook
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WebhookRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The test property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Test.TestRequestBuilder Test
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Test.TestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.notifications.configurations.webhook.item collection</summary>
        /// <param name="position">Identifier of the webhook notification configuration object</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Item.WithIdentifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Item.WithIdentifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.Item.WithIdentifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WebhookRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/notifications/configurations/webhook{?page_number*,page_size*,sort*,type*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WebhookRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/notifications/configurations/webhook{?page_number*,page_size*,sort*,type*}", rawUrl)
        {
        }
        /// <summary>
        /// Use this endpoint to get back a list of all webhook notification configurations that the account has set up.You need the &quot;View webhooks&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseWebhookConfigurationLog"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseWebhookConfigurationLog?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder.WebhookRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseWebhookConfigurationLog> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder.WebhookRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseWebhookConfigurationLog>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_PaginatedResponseWebhookConfigurationLog.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint enables you to create a webhook configuration that will monitor an event type and send updates to the URL you specify.There are several event types you can listen to:### CASE_CREATEDReceive an update whenever a new case is created.Note: - case_state is deprecated. Please use case_stage instead. - This webhook produces two responses v1 and v2 - please use v2 as it contains case_stage and also the customer external_identifierExample:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;webhook_type&quot;: &quot;CASE_CREATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;case_state&quot;: &quot;ONBOARDING_NOT_STARTED&quot;, &quot;case_type&quot;: &quot;CUSTOMER_ONBOARDING&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;case_stage&quot;: {   &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;display_name&quot;: &quot;Not Started&quot;,   &quot;display_order&quot;: 1,   &quot;stage_type&quot;: &quot;INITIAL&quot;,   &quot;decision_type&quot;: null }, &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### CASE_STAGE_UPDATEDReceive an update whenever a case changes its stage, e.g. from &quot;Not Started&quot; to &quot;In Progress&quot;.Note: - case_state is deprecated. Please use case_stage instead. - This webhook produces two responses v1 and v2 - please use v2 as it contains case_stage and also the customer external_identifierExample:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;webhook_type&quot;: &quot;CASE_STAGE_UPDATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;case_state&quot;: &quot;CASE_STATE_POSITIVE_END_STATE&quot;, &quot;case_type&quot;: &quot;CUSTOMER_ONBOARDING&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;note&quot;: {  &quot;contents&quot;: &quot;note left at the time the case state was updated&quot; }, &quot;case_stage&quot;: {   &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;display_name&quot;: &quot;False Positive&quot;,   &quot;display_order&quot;: 4,   &quot;stage_type&quot;: &quot;DECISION&quot;,   &quot;decision_type&quot;: &quot;POSITIVE&quot; }, &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### CASE_ALERT_LIST_UPDATEDReceive an update whenever the alert list associated with a case is updated, such as when new alerts are added to the case.Example:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;account_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; &quot;webhook_type&quot;: &quot;CASE_ALERT_LIST_UPDATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;alert_identifiers&quot;: [   &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; ], &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### WORKFLOW_COMPLETEDReceive an update when an onboarding workflow completes.Example:```json{  &quot;api_version&quot;: &quot;v2&quot;,  &quot;webhook_type&quot;: &quot;WORKFLOW_COMPLETED&quot;,  &quot;workflow_instance_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;status&quot;: &quot;COMPLETED&quot;,  &quot;step_details&quot;: {    &quot;alerting&quot;: {      &quot;identifier&quot;: null,      &quot;status&quot;: &quot;COMPLETED&quot;,      &quot;step_output&quot;: {      &quot;alerts&quot;: [          {            &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;          }        ]      }    },    &quot;customer-creation&quot;: {        &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,        &quot;status&quot;: &quot;COMPLETED&quot;,        &quot;step_output&quot;: {        &quot;customer_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;      }    },    &quot;customer-screening&quot;: {      &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,      &quot;status&quot;: &quot;COMPLETED&quot;,      &quot;step_output&quot;: {        &quot;screening_result&quot;: &quot;HAS_PROFILES&quot;,        &quot;aml_types&quot;: [          &quot;SANCTION&quot;,          &quot;ADVERSE_MEDIA&quot;,          &quot;ADVERSE_MEDIA_V2_CYBERCRIME&quot;,          &quot;PEP_CLASS_1&quot;,          &quot;PEP_CLASS_2&quot;,          &quot;WARNING&quot;        ]      }    },    &quot;initial-risk-scoring&quot;: {        &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,        &quot;status&quot;: &quot;COMPLETED&quot;,        &quot;step_output&quot;: {        &quot;overall_level&quot;: &quot;LOW-RISK&quot;,        &quot;overall_value&quot;: 0      }    }  },  &quot;steps&quot;: [    &quot;customer-creation&quot;,    &quot;initial-risk-scoring&quot;,    &quot;customer-screening&quot;,    &quot;alerting&quot;  ],  &quot;workflow_type&quot;: &quot;create-and-screen&quot;}```### TRANSACTION_REVIEWEDReceive an update when an onboarding workflow completes.Example:```json{  &quot;api_version&quot;: &quot;v3&quot;,  &quot;account_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;webhook_type&quot;: &quot;TRANSACTION_REVIEWED&quot;,  &quot;transaction_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;transaction_external_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;evaluation_outcome&quot;: &quot;HOLD&quot;,  &quot;review_decision&quot;: &quot;RELEASE&quot;}```     You need the &quot;Create and update webhooks&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationLog"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationLog?> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationLog> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationLog>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationLog.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Use this endpoint to get back a list of all webhook notification configurations that the account has set up.You need the &quot;View webhooks&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder.WebhookRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder.WebhookRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// This endpoint enables you to create a webhook configuration that will monitor an event type and send updates to the URL you specify.There are several event types you can listen to:### CASE_CREATEDReceive an update whenever a new case is created.Note: - case_state is deprecated. Please use case_stage instead. - This webhook produces two responses v1 and v2 - please use v2 as it contains case_stage and also the customer external_identifierExample:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;webhook_type&quot;: &quot;CASE_CREATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;case_state&quot;: &quot;ONBOARDING_NOT_STARTED&quot;, &quot;case_type&quot;: &quot;CUSTOMER_ONBOARDING&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;case_stage&quot;: {   &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;display_name&quot;: &quot;Not Started&quot;,   &quot;display_order&quot;: 1,   &quot;stage_type&quot;: &quot;INITIAL&quot;,   &quot;decision_type&quot;: null }, &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### CASE_STAGE_UPDATEDReceive an update whenever a case changes its stage, e.g. from &quot;Not Started&quot; to &quot;In Progress&quot;.Note: - case_state is deprecated. Please use case_stage instead. - This webhook produces two responses v1 and v2 - please use v2 as it contains case_stage and also the customer external_identifierExample:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;webhook_type&quot;: &quot;CASE_STAGE_UPDATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;case_state&quot;: &quot;CASE_STATE_POSITIVE_END_STATE&quot;, &quot;case_type&quot;: &quot;CUSTOMER_ONBOARDING&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;note&quot;: {  &quot;contents&quot;: &quot;note left at the time the case state was updated&quot; }, &quot;case_stage&quot;: {   &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;display_name&quot;: &quot;False Positive&quot;,   &quot;display_order&quot;: 4,   &quot;stage_type&quot;: &quot;DECISION&quot;,   &quot;decision_type&quot;: &quot;POSITIVE&quot; }, &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### CASE_ALERT_LIST_UPDATEDReceive an update whenever the alert list associated with a case is updated, such as when new alerts are added to the case.Example:```json{ &quot;api_version&quot;: &quot;v2&quot;, &quot;account_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; &quot;webhook_type&quot;: &quot;CASE_ALERT_LIST_UPDATED&quot;, &quot;case_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;, &quot;customer&quot;: {  &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,  &quot;version&quot;: 1 }, &quot;alert_identifiers&quot;: [   &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,   &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; ], &quot;subjects&quot;: [   {     &quot;type&quot;: &quot;CUSTOMER&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique customer identifier&quot;,     &quot;version&quot;: &quot;1&quot;   },   {     &quot;type&quot;: &quot;TRANSACTION&quot;,     &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,     &quot;external_identifier&quot;: &quot;your unique transaction identifier&quot;   },   {     &quot;type&quot;: &quot;COUNTERPARTY&quot;,     &quot;external_identifier&quot;: &quot;your unique counterparty identifier&quot;   } ]}```### WORKFLOW_COMPLETEDReceive an update when an onboarding workflow completes.Example:```json{  &quot;api_version&quot;: &quot;v2&quot;,  &quot;webhook_type&quot;: &quot;WORKFLOW_COMPLETED&quot;,  &quot;workflow_instance_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;status&quot;: &quot;COMPLETED&quot;,  &quot;step_details&quot;: {    &quot;alerting&quot;: {      &quot;identifier&quot;: null,      &quot;status&quot;: &quot;COMPLETED&quot;,      &quot;step_output&quot;: {      &quot;alerts&quot;: [          {            &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;          }        ]      }    },    &quot;customer-creation&quot;: {        &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,        &quot;status&quot;: &quot;COMPLETED&quot;,        &quot;step_output&quot;: {        &quot;customer_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;      }    },    &quot;customer-screening&quot;: {      &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,      &quot;status&quot;: &quot;COMPLETED&quot;,      &quot;step_output&quot;: {        &quot;screening_result&quot;: &quot;HAS_PROFILES&quot;,        &quot;aml_types&quot;: [          &quot;SANCTION&quot;,          &quot;ADVERSE_MEDIA&quot;,          &quot;ADVERSE_MEDIA_V2_CYBERCRIME&quot;,          &quot;PEP_CLASS_1&quot;,          &quot;PEP_CLASS_2&quot;,          &quot;WARNING&quot;        ]      }    },    &quot;initial-risk-scoring&quot;: {        &quot;identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,        &quot;status&quot;: &quot;COMPLETED&quot;,        &quot;step_output&quot;: {        &quot;overall_level&quot;: &quot;LOW-RISK&quot;,        &quot;overall_value&quot;: 0      }    }  },  &quot;steps&quot;: [    &quot;customer-creation&quot;,    &quot;initial-risk-scoring&quot;,    &quot;customer-screening&quot;,    &quot;alerting&quot;  ],  &quot;workflow_type&quot;: &quot;create-and-screen&quot;}```### TRANSACTION_REVIEWEDReceive an update when an onboarding workflow completes.Example:```json{  &quot;api_version&quot;: &quot;v3&quot;,  &quot;account_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;webhook_type&quot;: &quot;TRANSACTION_REVIEWED&quot;,  &quot;transaction_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;transaction_external_identifier&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,  &quot;evaluation_outcome&quot;: &quot;HOLD&quot;,  &quot;review_decision&quot;: &quot;RELEASE&quot;}```     You need the &quot;Create and update webhooks&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ns_WebhookConfigurationPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Use this endpoint to get back a list of all webhook notification configurations that the account has set up.You need the &quot;View webhooks&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WebhookRequestBuilderGetQueryParameters 
        {
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>Sorting criteria in the format of: `[-]property` (`-` descending modifier).* Default sort order is ascending (without `-`).* Multiple sort criteria are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
            /// <summary>Filter webhook notification configurations by type</summary>
            [Obsolete("This property is deprecated, use TypeAsGetTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("type")]
            public string? Type { get; set; }
#nullable restore
#else
            [QueryParameter("type")]
            public string Type { get; set; }
#endif
            /// <summary>Filter webhook notification configurations by type</summary>
            [QueryParameter("type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.GetTypeQueryParameterType? TypeAsGetTypeQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WebhookRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Notifications.Configurations.Webhook.WebhookRequestBuilder.WebhookRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WebhookRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
