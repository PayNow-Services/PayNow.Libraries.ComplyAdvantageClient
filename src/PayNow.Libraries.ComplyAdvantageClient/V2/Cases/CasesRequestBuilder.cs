// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Assign;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Notes;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.States;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Transition;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Cases
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\cases
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CasesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The assign property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Assign.AssignRequestBuilder Assign
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Assign.AssignRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The notes property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Notes.NotesRequestBuilder Notes
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Notes.NotesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The states property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.States.StatesRequestBuilder States
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.States.StatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transition property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Transition.TransitionRequestBuilder Transition
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Transition.TransitionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The workflows property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder Workflows
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.cases.item collection</summary>
        /// <param name="position">The unique identifier of the case.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("case_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.cases.item collection</summary>
        /// <param name="position">The unique identifier of the case.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("case_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Item.WithCase_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CasesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/cases{?alerts%2Ehighest_priority*,alerts%2Etitle*,assignee*,assignee_identifier*,created_at_from*,created_at_to*,customer%2Eacquisition_source*,customer%2Eidentifier*,customer%2Elabel*,customer%2Erisk_level*,page_number*,page_size*,risk_type*,search*,sort*,stage%2Eidentifier*,state*,type*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CasesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/cases{?alerts%2Ehighest_priority*,alerts%2Etitle*,assignee*,assignee_identifier*,created_at_from*,created_at_to*,customer%2Eacquisition_source*,customer%2Eidentifier*,customer%2Elabel*,customer%2Erisk_level*,page_number*,page_size*,risk_type*,search*,sort*,stage%2Eidentifier*,state*,type*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a paginated list of cases for the user&apos;s account. Accepts filter and sort query parameters.You need the &quot;View cases&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseCaseResultResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseCaseResultResponse?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder.CasesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseCaseResultResponse> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder.CasesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseCaseResultResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseCaseResultResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a paginated list of cases for the user&apos;s account. Accepts filter and sort query parameters.You need the &quot;View cases&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder.CasesRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder.CasesRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a paginated list of cases for the user&apos;s account. Accepts filter and sort query parameters.You need the &quot;View cases&quot; permission to use this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CasesRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter cases by the highest priority alert (1-9).Allows filtering for cases where the highest priority alert matches the provided value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("alerts%2Ehighest_priority")]
            public int?[]? AlertsHighestPriority { get; set; }
#nullable restore
#else
            [QueryParameter("alerts%2Ehighest_priority")]
            public int?[] AlertsHighestPriority { get; set; }
#endif
            /// <summary>Filter cases by alert title(s).Allows filtering for cases with alerts matching any of the provided titles.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("alerts%2Etitle")]
            public string[]? AlertsTitle { get; set; }
#nullable restore
#else
            [QueryParameter("alerts%2Etitle")]
            public string[] AlertsTitle { get; set; }
#endif
            /// <summary>User identifier or null.</summary>
            [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("assignee")]
            public string[]? Assignee { get; set; }
#nullable restore
#else
            [QueryParameter("assignee")]
            public string[] Assignee { get; set; }
#endif
            /// <summary>Provide an array of user identifiers or blank with which to filter the case list.* Includes all cases assigned to user matching user identifiers.* If array includes blank, also includes cases without an assignee (i.e. unassigned).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("assignee_identifier")]
            public Guid?[]? AssigneeIdentifier { get; set; }
#nullable restore
#else
            [QueryParameter("assignee_identifier")]
            public Guid?[] AssigneeIdentifier { get; set; }
#endif
            /// <summary>Filter cases created on or after this date and time.</summary>
            [QueryParameter("created_at_from")]
            public DateTimeOffset? CreatedAtFrom { get; set; }
            /// <summary>Filter cases created on or before this date and time.</summary>
            [QueryParameter("created_at_to")]
            public DateTimeOffset? CreatedAtTo { get; set; }
            /// <summary>Provide an array of customer acquisition sources or blank with which to filter the case list.* Includes all cases matching at least one customer acquisition source.* If array includes blank, also includes cases without a customer acquisition source.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer%2Eacquisition_source")]
            public string[]? CustomerAcquisitionSource { get; set; }
#nullable restore
#else
            [QueryParameter("customer%2Eacquisition_source")]
            public string[] CustomerAcquisitionSource { get; set; }
#endif
            /// <summary>Filter cases by a list of customer identifiers</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer%2Eidentifier")]
            public Guid?[]? CustomerIdentifier { get; set; }
#nullable restore
#else
            [QueryParameter("customer%2Eidentifier")]
            public Guid?[] CustomerIdentifier { get; set; }
#endif
            /// <summary>Provide an array of customer label identifiers or blank with which to filter the case list.* Includes all cases matching at least one customer label.* If array includes blank, also includes cases without a customer label.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer%2Elabel")]
            public Guid?[]? CustomerLabel { get; set; }
#nullable restore
#else
            [QueryParameter("customer%2Elabel")]
            public Guid?[] CustomerLabel { get; set; }
#endif
            /// <summary>Filter cases by a list of customer risk levels.</summary>
            [Obsolete("This property is deprecated, use CustomerRiskLevelAsGetCustomerRiskLevelQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer%2Erisk_level")]
            public string[]? CustomerRiskLevel { get; set; }
#nullable restore
#else
            [QueryParameter("customer%2Erisk_level")]
            public string[] CustomerRiskLevel { get; set; }
#endif
            /// <summary>Filter cases by a list of customer risk levels.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer%2Erisk_level")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetCustomerRisk_levelQueryParameterType[]? CustomerRiskLevelAsGetCustomerRiskLevelQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("customer%2Erisk_level")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetCustomerRisk_levelQueryParameterType[] CustomerRiskLevelAsGetCustomerRiskLevelQueryParameterType { get; set; }
#endif
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>Filter cases by a list of risk types. You can retrieve the full list of available risk types from the `/v2/risk-types` endpoint.</summary>
            [Obsolete("This property is deprecated, use RiskTypeAsGetRiskTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("risk_type")]
            public string[]? RiskType { get; set; }
#nullable restore
#else
            [QueryParameter("risk_type")]
            public string[] RiskType { get; set; }
#endif
            /// <summary>Filter cases by a list of risk types. You can retrieve the full list of available risk types from the `/v2/risk-types` endpoint.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("risk_type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetRisk_typeQueryParameterType[]? RiskTypeAsGetRiskTypeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("risk_type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetRisk_typeQueryParameterType[] RiskTypeAsGetRiskTypeQueryParameterType { get; set; }
#endif
            /// <summary>Search for cases by customer name, customer external identifier, or external activity identifier (for payment screening cases only). Supports wildcard search.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("search")]
            public string? Search { get; set; }
#nullable restore
#else
            [QueryParameter("search")]
            public string Search { get; set; }
#endif
            /// <summary>Sorting criteria in the format of: `[-]property` (`-` descending modifier).* Default sort order is ascending (without `-`).* Multiple sort criteria are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
            /// <summary>Provide an array of stage identifiers with which to filter the case list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("stage%2Eidentifier")]
            public Guid?[]? StageIdentifier { get; set; }
#nullable restore
#else
            [QueryParameter("stage%2Eidentifier")]
            public Guid?[] StageIdentifier { get; set; }
#endif
            /// <summary>The current state of the case.For those using the deprecated case_state, if any new case stages are added the case state response for these will be returned as USER_DEFINED</summary>
            [Obsolete("This property is deprecated, use StateAsGetStateQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("state")]
            public string[]? State { get; set; }
#nullable restore
#else
            [QueryParameter("state")]
            public string[] State { get; set; }
#endif
            /// <summary>The current state of the case.For those using the deprecated case_state, if any new case stages are added the case state response for these will be returned as USER_DEFINED</summary>
            [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("state")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetStateQueryParameterType[]? StateAsGetStateQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("state")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetStateQueryParameterType[] StateAsGetStateQueryParameterType { get; set; }
#endif
            /// <summary>Filter cases by specific case types</summary>
            [Obsolete("This property is deprecated, use TypeAsGetTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("type")]
            public string[]? Type { get; set; }
#nullable restore
#else
            [QueryParameter("type")]
            public string[] Type { get; set; }
#endif
            /// <summary>Filter cases by specific case types</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetTypeQueryParameterType[]? TypeAsGetTypeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("type")]
            public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.GetTypeQueryParameterType[] TypeAsGetTypeQueryParameterType { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CasesRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.CasesRequestBuilder.CasesRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
