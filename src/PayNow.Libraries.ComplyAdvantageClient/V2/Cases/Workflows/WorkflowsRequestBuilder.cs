// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\cases\workflows
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WorkflowsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.cases.workflows.item collection</summary>
        /// <param name="position">The unique identifier of the workflow.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("workflow_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.cases.workflows.item collection</summary>
        /// <param name="position">The unique identifier of the workflow.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("workflow_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.Item.WithWorkflow_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WorkflowsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/cases/workflows{?page_number*,page_size*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WorkflowsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/cases/workflows{?page_number*,page_size*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint returns a page of workflows.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseWorkflowResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseWorkflowResponse?> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder.WorkflowsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseWorkflowResponse> GetAsync(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder.WorkflowsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseWorkflowResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaginatedResponseWorkflowResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint returns a page of workflows.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder.WorkflowsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder.WorkflowsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// This endpoint returns a page of workflows.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WorkflowsRequestBuilderGetQueryParameters 
        {
            /// <summary>One-based page index (1..N)</summary>
            [QueryParameter("page_number")]
            public int? PageNumber { get; set; }
            /// <summary>The size of the page to be returned</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>Sorting criteria in the format of: `[-]property` (`-` descending modifier).* Default sort order is ascending (without `-`).* Multiple sort criteria are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WorkflowsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::PayNow.Libraries.ComplyAdvantageClient.V2.Cases.Workflows.WorkflowsRequestBuilder.WorkflowsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
