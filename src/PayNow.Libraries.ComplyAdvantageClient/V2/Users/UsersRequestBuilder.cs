// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using PayNow.Libraries.ComplyAdvantageClient.Models;
using PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item;
using PayNow.Libraries.ComplyAdvantageClient.V2.Users.Me;
using PayNow.Libraries.ComplyAdvantageClient.V2.Users.Roles;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.V2.Users
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\users
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UsersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The me property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Me.MeRequestBuilder Me
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Me.MeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roles property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Roles.RolesRequestBuilder Roles
        {
            get => new global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Roles.RolesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.users.item collection</summary>
        /// <param name="position">The identifier of the user that you want to retrieve.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder"/></returns>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("user_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the PayNow.Libraries.ComplyAdvantageClient.v2.users.item collection</summary>
        /// <param name="position">The identifier of the user that you want to retrieve.</param>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("user_identifier", position);
                return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.Item.WithUser_identifierItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.UsersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UsersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/users", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.UsersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UsersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/users", rawUrl)
        {
        }
        /// <summary>
        /// Creates a new user.To enable the user to access an account, they must be assigned at least one role. A user will not be sent an email invite until assigned at least one role.Follow these steps to create and configure a user: 1. **Create user:** Create the user by calling  `POST /users`.2. **Get role(s):** Use `GET /roles` to fetch the role_identifier(s) you wish to assign to the user.3. **(Optional) Get account**: If you need to assign roles for an account you&apos;re not currently logged into but within the same organization, retrieve the relevant `account_identifier` using `GET clients/me/accounts`.4. **Assign user role**: Use `POST /users/{user_identifier}/roles` to assign the user to an account with a list of `role_identifier(s)` and optionally the `account_identifier` if applicable.You need the &quot;Create and update users&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_AnyUserResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_ProblemDetailErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_AnyUserResponse?> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_UserRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_AnyUserResponse> PostAsync(global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_UserRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_ProblemDetailErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_AnyUserResponse>(requestInfo, global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_AnyUserResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a new user.To enable the user to access an account, they must be assigned at least one role. A user will not be sent an email invite until assigned at least one role.Follow these steps to create and configure a user: 1. **Create user:** Create the user by calling  `POST /users`.2. **Get role(s):** Use `GET /roles` to fetch the role_identifier(s) you wish to assign to the user.3. **(Optional) Get account**: If you need to assign roles for an account you&apos;re not currently logged into but within the same organization, retrieve the relevant `account_identifier` using `GET clients/me/accounts`.4. **Assign user role**: Use `POST /users/{user_identifier}/roles` to assign the user to an account with a list of `role_identifier(s)` and optionally the `account_identifier` if applicable.You need the &quot;Create and update users&quot; permission to use this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_UserRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::PayNow.Libraries.ComplyAdvantageClient.Models.Identity_UserRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.UsersRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.UsersRequestBuilder WithUrl(string rawUrl)
        {
            return new global::PayNow.Libraries.ComplyAdvantageClient.V2.Users.UsersRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UsersRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
