// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bulk_ErrorAttributes : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The column_names property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ColumnNames { get; set; }
#nullable restore
#else
        public List<string> ColumnNames { get; set; }
#endif
        /// <summary>The column_options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? ColumnOptions { get; set; }
#nullable restore
#else
        public UntypedNode ColumnOptions { get; set; }
#endif
        /// <summary>The expected_range property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? ExpectedRange { get; set; }
#nullable restore
#else
        public List<long?> ExpectedRange { get; set; }
#endif
        /// <summary>The max_row_limit property</summary>
        public long? MaxRowLimit { get; set; }
        /// <summary>The rejected_values property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RejectedValues { get; set; }
#nullable restore
#else
        public List<string> RejectedValues { get; set; }
#endif
        /// <summary>The required_format property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequiredFormat { get; set; }
#nullable restore
#else
        public string RequiredFormat { get; set; }
#endif
        /// <summary>The required_formats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RequiredFormats { get; set; }
#nullable restore
#else
        public List<string> RequiredFormats { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Bulk_ErrorAttributes"/> and sets the default values.
        /// </summary>
        public Bulk_ErrorAttributes()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Bulk_ErrorAttributes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Bulk_ErrorAttributes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Bulk_ErrorAttributes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "column_names", n => { ColumnNames = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "column_options", n => { ColumnOptions = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "expected_range", n => { ExpectedRange = n.GetCollectionOfPrimitiveValues<long?>()?.AsList(); } },
                { "max_row_limit", n => { MaxRowLimit = n.GetLongValue(); } },
                { "rejected_values", n => { RejectedValues = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "required_format", n => { RequiredFormat = n.GetStringValue(); } },
                { "required_formats", n => { RequiredFormats = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("column_names", ColumnNames);
            writer.WriteObjectValue<UntypedNode>("column_options", ColumnOptions);
            writer.WriteCollectionOfPrimitiveValues<long?>("expected_range", ExpectedRange);
            writer.WriteLongValue("max_row_limit", MaxRowLimit);
            writer.WriteCollectionOfPrimitiveValues<string>("rejected_values", RejectedValues);
            writer.WriteStringValue("required_format", RequiredFormat);
            writer.WriteCollectionOfPrimitiveValues<string>("required_formats", RequiredFormats);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
