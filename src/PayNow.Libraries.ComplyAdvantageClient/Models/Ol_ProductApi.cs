// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Represents a list of products. They can be either a bank account or a crypto wallet.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ol_ProductApi : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bank_account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_BankAccount? BankAccount { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_BankAccount BankAccount { get; set; }
#endif
        /// <summary>The crypto_wallet property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CryptoWallet? CryptoWallet { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CryptoWallet CryptoWallet { get; set; }
#endif
        /// <summary>The currency property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi_currency? Currency { get; set; }
        /// <summary>The monthly_payment_amount property</summary>
        public double? MonthlyPaymentAmount { get; set; }
        /// <summary>The monthly_received_amount property</summary>
        public double? MonthlyReceivedAmount { get; set; }
        /// <summary>The monthly_transaction_count property</summary>
        public long? MonthlyTransactionCount { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The onboarding_channel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_OnboardingChannelApi? OnboardingChannel { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_OnboardingChannelApi OnboardingChannel { get; set; }
#endif
        /// <summary>The purpose property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Purpose { get; set; }
#nullable restore
#else
        public string Purpose { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi"/> and sets the default values.
        /// </summary>
        public Ol_ProductApi()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bank_account", n => { BankAccount = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_BankAccount>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_BankAccount.CreateFromDiscriminatorValue); } },
                { "crypto_wallet", n => { CryptoWallet = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CryptoWallet>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CryptoWallet.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi_currency>(); } },
                { "monthly_payment_amount", n => { MonthlyPaymentAmount = n.GetDoubleValue(); } },
                { "monthly_received_amount", n => { MonthlyReceivedAmount = n.GetDoubleValue(); } },
                { "monthly_transaction_count", n => { MonthlyTransactionCount = n.GetLongValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "onboarding_channel", n => { OnboardingChannel = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_OnboardingChannelApi>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_OnboardingChannelApi.CreateFromDiscriminatorValue); } },
                { "purpose", n => { Purpose = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_BankAccount>("bank_account", BankAccount);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CryptoWallet>("crypto_wallet", CryptoWallet);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi_currency>("currency", Currency);
            writer.WriteDoubleValue("monthly_payment_amount", MonthlyPaymentAmount);
            writer.WriteDoubleValue("monthly_received_amount", MonthlyReceivedAmount);
            writer.WriteLongValue("monthly_transaction_count", MonthlyTransactionCount);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_OnboardingChannelApi>("onboarding_channel", OnboardingChannel);
            writer.WriteStringValue("purpose", Purpose);
            writer.WriteStringValue("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
