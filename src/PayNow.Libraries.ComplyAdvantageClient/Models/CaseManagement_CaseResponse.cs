// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Case result detail.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CaseManagement_CaseResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>User unique identifier that is currently assigned to case. null if un-assigned.</summary>
        public Guid? Assignee { get; set; }
        /// <summary>Case created date and time.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Customer summary that is associated to a case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseCustomerSummaryResponse? Customer { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseCustomerSummaryResponse Customer { get; set; }
#endif
        /// <summary>Case unique identifier.</summary>
        public Guid? Identifier { get; set; }
        /// <summary>Stage</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage? LastUserStage { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage LastUserStage { get; set; }
#endif
        /// <summary>The last state the case was transitioned to by a user (as opposed to a system action).For those using the deprecated case_state, if any new case stages are added the case state response for these will be returned as  USER_DEFINED</summary>
        [Obsolete("")]
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_last_user_state? LastUserState { get; set; }
        /// <summary>Summary of payment information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaymentSummaryResponse? Payment { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaymentSummaryResponse Payment { get; set; }
#endif
        /// <summary>Number of items to review in case.</summary>
        public int? ReviewItemsCount { get; set; }
        /// <summary>Risk catalog risk types associated with the case</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskCatalogResponse>? RiskCatalogRiskTypes { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskCatalogResponse> RiskCatalogRiskTypes { get; set; }
#endif
        /// <summary>Risk types of case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskTypesResponse>? RiskTypes { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskTypesResponse> RiskTypes { get; set; }
#endif
        /// <summary>Stage</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage? Stage { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage Stage { get; set; }
#endif
        /// <summary>The current state of the case.For those using the deprecated case_state, if any new case stages are added the case state response for these will be returned as USER_DEFINED</summary>
        [Obsolete("")]
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_state? State { get; set; }
        /// <summary>Subjects associated with the case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Subject>? Subjects { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Subject> Subjects { get; set; }
#endif
        /// <summary>Case type.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_type? Type { get; set; }
        /// <summary>Case last updated date and time.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Last state of case set by an user.</summary>
        public Guid? UpdatedBy { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse"/> and sets the default values.
        /// </summary>
        public CaseManagement_CaseResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assignee", n => { Assignee = n.GetGuidValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseCustomerSummaryResponse>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseCustomerSummaryResponse.CreateFromDiscriminatorValue); } },
                { "identifier", n => { Identifier = n.GetGuidValue(); } },
                { "last_user_stage", n => { LastUserStage = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage.CreateFromDiscriminatorValue); } },
                { "last_user_state", n => { LastUserState = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_last_user_state>(); } },
                { "payment", n => { Payment = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaymentSummaryResponse>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaymentSummaryResponse.CreateFromDiscriminatorValue); } },
                { "review_items_count", n => { ReviewItemsCount = n.GetIntValue(); } },
                { "risk_catalog_risk_types", n => { RiskCatalogRiskTypes = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskCatalogResponse>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskCatalogResponse.CreateFromDiscriminatorValue)?.AsList(); } },
                { "risk_types", n => { RiskTypes = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskTypesResponse>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskTypesResponse.CreateFromDiscriminatorValue)?.AsList(); } },
                { "stage", n => { Stage = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_state>(); } },
                { "subjects", n => { Subjects = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Subject>(global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Subject.CreateFromDiscriminatorValue)?.AsList(); } },
                { "type", n => { Type = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updated_by", n => { UpdatedBy = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("assignee", Assignee);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseCustomerSummaryResponse>("customer", Customer);
            writer.WriteGuidValue("identifier", Identifier);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage>("last_user_stage", LastUserStage);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_last_user_state>("last_user_state", LastUserState);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_PaymentSummaryResponse>("payment", Payment);
            writer.WriteIntValue("review_items_count", ReviewItemsCount);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskCatalogResponse>("risk_catalog_risk_types", RiskCatalogRiskTypes);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_RiskTypesResponse>("risk_types", RiskTypes);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Stage>("stage", Stage);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_state>("state", State);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_Subject>("subjects", Subjects);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseResponse_type>("type", Type);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteGuidValue("updated_by", UpdatedBy);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
