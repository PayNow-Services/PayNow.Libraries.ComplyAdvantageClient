// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Create and screen customer synchronously
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ol_CreateAndScreenCustomerRequest : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents monitoring and screening configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerConfigData? Configuration { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerConfigData Configuration { get; set; }
#endif
        /// <summary>Customer to be created and screened. It can be either a person, a company or undefined.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerApi? Customer { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerApi Customer { get; set; }
#endif
        /// <summary>Represents monitoring configuration.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerMonitoringData? Monitoring { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerMonitoringData Monitoring { get; set; }
#endif
        /// <summary>Represents a list of products. They can be either a bank account or a crypto wallet.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi>? Product { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi> Product { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CreateAndScreenCustomerRequest"/> and sets the default values.
        /// </summary>
        public Ol_CreateAndScreenCustomerRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CreateAndScreenCustomerRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CreateAndScreenCustomerRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CreateAndScreenCustomerRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "configuration", n => { Configuration = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerConfigData>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerConfigData.CreateFromDiscriminatorValue); } },
                { "customer", n => { Customer = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerApi>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerApi.CreateFromDiscriminatorValue); } },
                { "monitoring", n => { Monitoring = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerMonitoringData>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerMonitoringData.CreateFromDiscriminatorValue); } },
                { "product", n => { Product = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerConfigData>("configuration", Configuration);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerApi>("customer", Customer);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomerMonitoringData>("monitoring", Monitoring);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_ProductApi>("product", Product);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
