// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// The stage to be created
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CaseManagement_NewStage : IParsable
    {
        /// <summary>The decision type of the stage (decision stages only).</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_decision_type? DecisionType { get; set; }
        /// <summary>The display name of the stage.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The display order of the stage.</summary>
        public int? DisplayOrder { get; set; }
        /// <summary>The type of the stage.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_stage_type? StageType { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "decision_type", n => { DecisionType = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_decision_type>(); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "display_order", n => { DisplayOrder = n.GetIntValue(); } },
                { "stage_type", n => { StageType = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_stage_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_decision_type>("decision_type", DecisionType);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteIntValue("display_order", DisplayOrder);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NewStage_stage_type>("stage_type", StageType);
        }
    }
}
#pragma warning restore CS0618
