// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Object containing risk information.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Sra_Risk : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Timestamp of when the risk was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Decision made on the risk.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_decision? Decision { get; set; }
        /// <summary>Detail of the risk.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskDetail? Detail { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskDetail Detail { get; set; }
#endif
        /// <summary>Unique identifier of the risk</summary>
        public Guid? Identifier { get; set; }
        /// <summary>Decision made on the risk.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_previous_decision? PreviousDecision { get; set; }
        /// <summary>Type of risk</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_type? Type { get; set; }
        /// <summary>Timestamp of when the risk was updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Unique identifier of the user of last updated the risk</summary>
        public Guid? UpdatedBy { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk"/> and sets the default values.
        /// </summary>
        public Sra_Risk()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "decision", n => { Decision = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_decision>(); } },
                { "detail", n => { Detail = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskDetail>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskDetail.CreateFromDiscriminatorValue); } },
                { "identifier", n => { Identifier = n.GetGuidValue(); } },
                { "previous_decision", n => { PreviousDecision = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_previous_decision>(); } },
                { "type", n => { Type = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updated_by", n => { UpdatedBy = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_decision>("decision", Decision);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskDetail>("detail", Detail);
            writer.WriteGuidValue("identifier", Identifier);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_previous_decision>("previous_decision", PreviousDecision);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Risk_type>("type", Type);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteGuidValue("updated_by", UpdatedBy);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
