// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RiskScoring_CategoryResult : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attribute_results property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results>? AttributeResults { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results> AttributeResults { get; set; }
#endif
        /// <summary>The category property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_category? Category { get; set; }
        /// <summary>The level property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_level? Level { get; set; }
        /// <summary>The score property</summary>
        public double? Score { get; set; }
        /// <summary>The weight property</summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult"/> and sets the default values.
        /// </summary>
        public RiskScoring_CategoryResult()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attribute_results", n => { AttributeResults = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results>(global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results.CreateFromDiscriminatorValue)?.AsList(); } },
                { "category", n => { Category = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_category>(); } },
                { "level", n => { Level = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_level>(); } },
                { "score", n => { Score = n.GetDoubleValue(); } },
                { "weight", n => { Weight = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results>("attribute_results", AttributeResults);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_category>("category", Category);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult_level>("level", Level);
            writer.WriteDoubleValue("score", Score);
            writer.WriteDoubleValue("weight", Weight);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField"/>, <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RiskScoring_CategoryResult_attribute_results : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField? RiskScoringListField { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField RiskScoringListField { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField? RiskScoringValueField { get; set; }
#nullable restore
#else
            public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField RiskScoringValueField { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
                var result = new global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.RiskScoring_CategoryResult_attribute_results();
                if("risk-scoring_ListField".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RiskScoringListField = new global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField();
                }
                else if("risk-scoring_ValueField".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RiskScoringValueField = new global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RiskScoringListField != null)
                {
                    return RiskScoringListField.GetFieldDeserializers();
                }
                else if(RiskScoringValueField != null)
                {
                    return RiskScoringValueField.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(RiskScoringListField != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ListField>(null, RiskScoringListField);
                }
                else if(RiskScoringValueField != null)
                {
                    writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_ValueField>(null, RiskScoringValueField);
                }
            }
        }
    }
}
#pragma warning restore CS0618
