// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// A list of entity screening risks associated with the alert.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Sra_Profile : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Identity information of the profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Aircraft? Aircraft { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Aircraft Aircraft { get; set; }
#endif
        /// <summary>Identity information of the profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Company? Company { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Company Company { get; set; }
#endif
        /// <summary>Unique identifier of the profile</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Identifier { get; set; }
#nullable restore
#else
        public string Identifier { get; set; }
#endif
        /// <summary>Name of the profile that matched the screen criteria</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MatchingName { get; set; }
#nullable restore
#else
        public string MatchingName { get; set; }
#endif
        /// <summary>Match score</summary>
        public double? MatchScore { get; set; }
        /// <summary>List of reasons the profile matched the screen criteria</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? MatchTypes { get; set; }
#nullable restore
#else
        public List<string> MatchTypes { get; set; }
#endif
        /// <summary>Identity information of the profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Person? Person { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Person Person { get; set; }
#endif
        /// <summary>Risks associated with the profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskIndicators? RiskIndicators { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskIndicators RiskIndicators { get; set; }
#endif
        /// <summary>Identity information of the profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Vessel? Vessel { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Vessel Vessel { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Profile"/> and sets the default values.
        /// </summary>
        public Sra_Profile()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Profile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Profile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Profile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aircraft", n => { Aircraft = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Aircraft>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Aircraft.CreateFromDiscriminatorValue); } },
                { "company", n => { Company = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Company>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Company.CreateFromDiscriminatorValue); } },
                { "identifier", n => { Identifier = n.GetStringValue(); } },
                { "match_score", n => { MatchScore = n.GetDoubleValue(); } },
                { "match_types", n => { MatchTypes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "matching_name", n => { MatchingName = n.GetStringValue(); } },
                { "person", n => { Person = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Person>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Person.CreateFromDiscriminatorValue); } },
                { "risk_indicators", n => { RiskIndicators = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskIndicators>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskIndicators.CreateFromDiscriminatorValue); } },
                { "vessel", n => { Vessel = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Vessel>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Vessel.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Aircraft>("aircraft", Aircraft);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Company>("company", Company);
            writer.WriteStringValue("identifier", Identifier);
            writer.WriteStringValue("matching_name", MatchingName);
            writer.WriteDoubleValue("match_score", MatchScore);
            writer.WriteCollectionOfPrimitiveValues<string>("match_types", MatchTypes);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Person>("person", Person);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_RiskIndicators>("risk_indicators", RiskIndicators);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Sra_Vessel>("vessel", Vessel);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
