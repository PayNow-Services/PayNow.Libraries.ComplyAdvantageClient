// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Represents a Transaction performed by a Customer. A Transaction can be either monetary or non-monetary.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ol_TransactionV3 : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Your unique identifier for customer that the Transaction is associated with. We will populate this after mapping your customer identifier to ours as we process your Transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerExternalIdentifier { get; set; }
#nullable restore
#else
        public string CustomerExternalIdentifier { get; set; }
#endif
        /// <summary>Our unique identifier for customer that the Transaction is associated with. We will populate this after mapping your customer identifier to ours as we process your Transaction.</summary>
        public Guid? CustomerIdentifier { get; private set; }
        /// <summary>A list of custom fields attached to the Transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomFieldV3>? CustomFields { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomFieldV3> CustomFields { get; set; }
#endif
        /// <summary>The details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_MonetaryTransactionClassificationDetailsV3? Details { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_MonetaryTransactionClassificationDetailsV3 Details { get; set; }
#endif
        /// <summary>The combined outcome of all transaction evaluations.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3_evaluation_outcome? EvaluationOutcome { get; private set; }
        /// <summary>Your unique identifier for the Transaction. You will use this to reference the Transaction within our systems. This cannot be changed after submitting the Transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalIdentifier { get; set; }
#nullable restore
#else
        public string ExternalIdentifier { get; set; }
#endif
        /// <summary>Our unique identifier for your Transaction. We generate this when we process your Transaction and you are not able to specify it.</summary>
        public Guid? Identifier { get; private set; }
        /// <summary>The timestamp of the Transaction. This is the timestamp you want us to use as this transactions position in time for the purposes of risk analysis. This timestamp can contain offset information.</summary>
        public DateTimeOffset? OccurredAt { get; set; }
        /// <summary>The timestamp the Transaction event was received by us.</summary>
        public DateTimeOffset? ReceivedAt { get; private set; }
        /// <summary>Regulatory reporting transaction details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_RegulatoryReportDetailsV3? RegulatoryReportingDetails { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_RegulatoryReportDetailsV3 RegulatoryReportingDetails { get; set; }
#endif
        /// <summary>Represents the states of review decision</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3_review_decision? ReviewDecision { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3"/> and sets the default values.
        /// </summary>
        public Ol_TransactionV3()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "custom_fields", n => { CustomFields = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomFieldV3>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomFieldV3.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customer_external_identifier", n => { CustomerExternalIdentifier = n.GetStringValue(); } },
                { "customer_identifier", n => { CustomerIdentifier = n.GetGuidValue(); } },
                { "details", n => { Details = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_MonetaryTransactionClassificationDetailsV3>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_MonetaryTransactionClassificationDetailsV3.CreateFromDiscriminatorValue); } },
                { "evaluation_outcome", n => { EvaluationOutcome = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3_evaluation_outcome>(); } },
                { "external_identifier", n => { ExternalIdentifier = n.GetStringValue(); } },
                { "identifier", n => { Identifier = n.GetGuidValue(); } },
                { "occurred_at", n => { OccurredAt = n.GetDateTimeOffsetValue(); } },
                { "received_at", n => { ReceivedAt = n.GetDateTimeOffsetValue(); } },
                { "regulatory_reporting_details", n => { RegulatoryReportingDetails = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_RegulatoryReportDetailsV3>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_RegulatoryReportDetailsV3.CreateFromDiscriminatorValue); } },
                { "review_decision", n => { ReviewDecision = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_TransactionV3_review_decision>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("customer_external_identifier", CustomerExternalIdentifier);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CustomFieldV3>("custom_fields", CustomFields);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_MonetaryTransactionClassificationDetailsV3>("details", Details);
            writer.WriteStringValue("external_identifier", ExternalIdentifier);
            writer.WriteDateTimeOffsetValue("occurred_at", OccurredAt);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_RegulatoryReportDetailsV3>("regulatory_reporting_details", RegulatoryReportingDetails);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
