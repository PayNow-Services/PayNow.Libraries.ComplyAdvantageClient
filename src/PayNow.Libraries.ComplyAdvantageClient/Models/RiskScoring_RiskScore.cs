// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RiskScoring_RiskScore : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_identifier property</summary>
        public Guid? AccountIdentifier { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The category_results property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult>? CategoryResults { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult> CategoryResults { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The customer_identifier property</summary>
        public Guid? CustomerIdentifier { get; set; }
        /// <summary>The customer_version property</summary>
        public int? CustomerVersion { get; set; }
        /// <summary>The overall_result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_OverallResult? OverallResult { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_OverallResult OverallResult { get; set; }
#endif
        /// <summary>The risk_model_identifier property</summary>
        public Guid? RiskModelIdentifier { get; set; }
        /// <summary>The risk_model_version property</summary>
        public int? RiskModelVersion { get; set; }
        /// <summary>The score_identifier property</summary>
        public Guid? ScoreIdentifier { get; set; }
        /// <summary>The type property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore"/> and sets the default values.
        /// </summary>
        public RiskScoring_RiskScore()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_identifier", n => { AccountIdentifier = n.GetGuidValue(); } },
                { "category_results", n => { CategoryResults = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult>(global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult.CreateFromDiscriminatorValue)?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "customer_identifier", n => { CustomerIdentifier = n.GetGuidValue(); } },
                { "customer_version", n => { CustomerVersion = n.GetIntValue(); } },
                { "overall_result", n => { OverallResult = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_OverallResult>(global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_OverallResult.CreateFromDiscriminatorValue); } },
                { "risk_model_identifier", n => { RiskModelIdentifier = n.GetGuidValue(); } },
                { "risk_model_version", n => { RiskModelVersion = n.GetIntValue(); } },
                { "score_identifier", n => { ScoreIdentifier = n.GetGuidValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("account_identifier", AccountIdentifier);
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_CategoryResult>("category_results", CategoryResults);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteGuidValue("customer_identifier", CustomerIdentifier);
            writer.WriteIntValue("customer_version", CustomerVersion);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_OverallResult>("overall_result", OverallResult);
            writer.WriteGuidValue("risk_model_identifier", RiskModelIdentifier);
            writer.WriteIntValue("risk_model_version", RiskModelVersion);
            writer.WriteGuidValue("score_identifier", ScoreIdentifier);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.RiskScoring_RiskScore_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
