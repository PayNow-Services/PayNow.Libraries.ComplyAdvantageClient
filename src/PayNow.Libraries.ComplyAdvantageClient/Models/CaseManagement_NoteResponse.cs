// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse"/>, <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse"/>, <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CaseManagement_NoteResponse : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse? CaseManagementCaseAssignmentNoteResponse { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse CaseManagementCaseAssignmentNoteResponse { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse? CaseManagementCaseNoteResponse { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse CaseManagementCaseNoteResponse { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse? CaseManagementCaseTransitionNoteResponse { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse CaseManagementCaseTransitionNoteResponse { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NoteResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NoteResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_NoteResponse();
            if("CASE_ASSIGNMENT".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CaseManagementCaseAssignmentNoteResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse();
            }
            else if("CASE".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CaseManagementCaseNoteResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse();
            }
            else if("CASE_TRANSITION".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CaseManagementCaseTransitionNoteResponse = new global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(CaseManagementCaseAssignmentNoteResponse != null)
            {
                return CaseManagementCaseAssignmentNoteResponse.GetFieldDeserializers();
            }
            else if(CaseManagementCaseNoteResponse != null)
            {
                return CaseManagementCaseNoteResponse.GetFieldDeserializers();
            }
            else if(CaseManagementCaseTransitionNoteResponse != null)
            {
                return CaseManagementCaseTransitionNoteResponse.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(CaseManagementCaseAssignmentNoteResponse != null)
            {
                writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseAssignmentNoteResponse>(null, CaseManagementCaseAssignmentNoteResponse);
            }
            else if(CaseManagementCaseNoteResponse != null)
            {
                writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseNoteResponse>(null, CaseManagementCaseNoteResponse);
            }
            else if(CaseManagementCaseTransitionNoteResponse != null)
            {
                writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.CaseManagement_CaseTransitionNoteResponse>(null, CaseManagementCaseTransitionNoteResponse);
            }
        }
    }
}
#pragma warning restore CS0618
