// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Details about a payment card used in a transaction.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ol_PaymentCardV3 : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Unique hashed card identifier for tracking.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fingerprint { get; set; }
#nullable restore
#else
        public string Fingerprint { get; set; }
#endif
        /// <summary>Defines the funding type of a payment card.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardFundingTypeV3? FundingType { get; set; }
        /// <summary>Digital wallet identifier if applicable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WalletIdentifier { get; set; }
#nullable restore
#else
        public string WalletIdentifier { get; set; }
#endif
        /// <summary>Defines the type of digital wallet.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardWalletTypeV3? WalletType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_PaymentCardV3"/> and sets the default values.
        /// </summary>
        public Ol_PaymentCardV3()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_PaymentCardV3"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_PaymentCardV3 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_PaymentCardV3();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "fingerprint", n => { Fingerprint = n.GetStringValue(); } },
                { "funding_type", n => { FundingType = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardFundingTypeV3>(); } },
                { "wallet_identifier", n => { WalletIdentifier = n.GetStringValue(); } },
                { "wallet_type", n => { WalletType = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardWalletTypeV3>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("fingerprint", Fingerprint);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardFundingTypeV3>("funding_type", FundingType);
            writer.WriteStringValue("wallet_identifier", WalletIdentifier);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_CardWalletTypeV3>("wallet_type", WalletType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
