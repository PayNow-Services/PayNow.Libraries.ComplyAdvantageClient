// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    /// <summary>
    /// Represents a structured address with detailed components.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Activity_StructuredAddressV3 : global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_AddressV3, IParsable
    {
        /// <summary>The first line of the address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; set; }
#nullable restore
#else
        public string AddressLine1 { get; set; }
#endif
        /// <summary>The second line of the address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; set; }
#nullable restore
#else
        public string AddressLine2 { get; set; }
#endif
        /// <summary>Represents the type of address.</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_AddressTypeV3? AddressType { get; set; }
        /// <summary>2 letter country code as defined by iso-3166-alpha-2.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The country subdivision (e.g., state, province).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountrySubdivision { get; set; }
#nullable restore
#else
        public string CountrySubdivision { get; set; }
#endif
        /// <summary>The postal code of the address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>The town or city name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TownName { get; set; }
#nullable restore
#else
        public string TownName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_StructuredAddressV3"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_StructuredAddressV3 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_StructuredAddressV3();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "address_line1", n => { AddressLine1 = n.GetStringValue(); } },
                { "address_line2", n => { AddressLine2 = n.GetStringValue(); } },
                { "address_type", n => { AddressType = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_AddressTypeV3>(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "country_subdivision", n => { CountrySubdivision = n.GetStringValue(); } },
                { "postal_code", n => { PostalCode = n.GetStringValue(); } },
                { "town_name", n => { TownName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("address_line1", AddressLine1);
            writer.WriteStringValue("address_line2", AddressLine2);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Activity_AddressTypeV3>("address_type", AddressType);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("country_subdivision", CountrySubdivision);
            writer.WriteStringValue("postal_code", PostalCode);
            writer.WriteStringValue("town_name", TownName);
        }
    }
}
#pragma warning restore CS0618
