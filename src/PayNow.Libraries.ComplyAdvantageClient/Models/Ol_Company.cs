// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PayNow.Libraries.ComplyAdvantageClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Ol_Company : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Address>? Address { get; set; }
#nullable restore
#else
        public List<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Address> Address { get; set; }
#endif
        /// <summary>The alias property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Alias { get; set; }
#nullable restore
#else
        public List<string> Alias { get; set; }
#endif
        /// <summary>The company_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyType { get; set; }
#nullable restore
#else
        public string CompanyType { get; set; }
#endif
        /// <summary>The incorporation_date property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Date? IncorporationDate { get; set; }
#nullable restore
#else
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Date IncorporationDate { get; set; }
#endif
        /// <summary>The industry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Industry { get; set; }
#nullable restore
#else
        public string Industry { get; set; }
#endif
        /// <summary>The legal_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LegalName { get; set; }
#nullable restore
#else
        public string LegalName { get; set; }
#endif
        /// <summary>The place_of_registration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlaceOfRegistration { get; set; }
#nullable restore
#else
        public string PlaceOfRegistration { get; set; }
#endif
        /// <summary>The registration_authority_identification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegistrationAuthorityIdentification { get; set; }
#nullable restore
#else
        public string RegistrationAuthorityIdentification { get; set; }
#endif
        /// <summary>The source_of_income property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceOfIncome { get; set; }
#nullable restore
#else
        public string SourceOfIncome { get; set; }
#endif
        /// <summary>The status_summary property</summary>
        public global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company_status_summary? StatusSummary { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company"/> and sets the default values.
        /// </summary>
        public Ol_Company()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Address>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Address.CreateFromDiscriminatorValue)?.AsList(); } },
                { "alias", n => { Alias = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "company_type", n => { CompanyType = n.GetStringValue(); } },
                { "incorporation_date", n => { IncorporationDate = n.GetObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Date>(global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Date.CreateFromDiscriminatorValue); } },
                { "industry", n => { Industry = n.GetStringValue(); } },
                { "legal_name", n => { LegalName = n.GetStringValue(); } },
                { "place_of_registration", n => { PlaceOfRegistration = n.GetStringValue(); } },
                { "registration_authority_identification", n => { RegistrationAuthorityIdentification = n.GetStringValue(); } },
                { "source_of_income", n => { SourceOfIncome = n.GetStringValue(); } },
                { "status_summary", n => { StatusSummary = n.GetEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company_status_summary>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Address>("address", Address);
            writer.WriteCollectionOfPrimitiveValues<string>("alias", Alias);
            writer.WriteStringValue("company_type", CompanyType);
            writer.WriteObjectValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Date>("incorporation_date", IncorporationDate);
            writer.WriteStringValue("industry", Industry);
            writer.WriteStringValue("legal_name", LegalName);
            writer.WriteStringValue("place_of_registration", PlaceOfRegistration);
            writer.WriteStringValue("registration_authority_identification", RegistrationAuthorityIdentification);
            writer.WriteStringValue("source_of_income", SourceOfIncome);
            writer.WriteEnumValue<global::PayNow.Libraries.ComplyAdvantageClient.Models.Ol_Company_status_summary>("status_summary", StatusSummary);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
